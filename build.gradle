plugins {
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

group = 'com.example'
version = '1.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //	https://stackoverflow.com/a/51921532/548473
    def springdocVersion = '2.0.2'
    def jsoupVersion = '1.15.3'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocVersion"
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta'
    implementation "org.jsoup:jsoup:$jsoupVersion"
    implementation 'mysql:mysql-connector-java'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('dockerComposeAll', Exec) {
    group 'devenv'
    def isWindows = System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')
    def runningEnvironment = isWindows ? 'cmd' : 'bash'
    def parameter = isWindows ? '/c' : '-c'

    commandLine runningEnvironment, parameter, "docker compose -f ${rootDir}/tools/docker/docker-compose.yml up -d"
}

tasks.register('killRmRmiAllContainersAndImages', Exec) {
    group 'kill'
    ignoreExitValue = true
    def isWindows = System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')
    def runningEnvironment = isWindows ? 'cmd' : 'bash'
    def parameter = isWindows ? '/c' : '-c'

    commandLine runningEnvironment, parameter,
            '(docker kill $(docker ps -aq) || true) ' +
                    '&& (docker rm $(docker ps -aq) || true) ' +
                    '&& (docker rmi $(docker images -q) || true)'

}
